const javascript = !0,
  react = 12,
  node = "cool";
switch (
  (javascript
    ? console.log("I am a JavaScript developer")
    : console.log("I am a Java developer"),
  react >= 12
    ? console.log("I am a React developer")
    : react < 12
    ? console.log("I am a Vue developer")
    : console.log("I am a SolidJS developer"),
  node)
) {
  case "advanced":
    console.log("NodeJS is advanced");
    break;
  case "best":
    console.log("NodeJS is the best");
    break;
  case "cool":
    console.log("NodeJS is cool");
    break;
  default:
    console.log("NodeJS is not cool");
}
const functionExample = (o, e) => o * e;
console.log(functionExample(2, 3));
const fruits = ["apples", "oranges", "pears, 10, true"],
  nestedArr = [[1], [2, 3]];
console.log(nestedArr[1]),
  (fruits[3] = "grapes"),
  fruits.push("mangos"),
  fruits.unshift("strawberries"),
  fruits.pop(),
  console.log(Array.isArray(fruits)),
  console.log(fruits.indexOf("oranges")),
  console.log(fruits),
  console.log(fruits[1]);
for (let o = 0; o < 10; o++) console.log(o);
const vacationSpots = ["Bali", "Paris", "Tulum"];
for (let o = 0; o < vacationSpots.length; o++)
  console.log("I would love to visit " + vacationSpots[o]);
const bobsFollowers = ["Jake", "Kyle", "Robert", "Shaq"],
  tinasFollowers = ["Mina", "Kyle", "Shaq"],
  mutualFollowers = [];
for (let o = 0; o < bobsFollowers.length; o++)
  for (let e = 0; e < tinasFollowers.length; e++)
    bobsFollowers[o] === tinasFollowers[e] &&
      mutualFollowers.push(tinasFollowers[e]);
let currentCard = "de";
for (; "spade" !== currentCard; )
  (currentCard = cards[Math.floor(4 * Math.random())]),
    console.log(currentCard);
let cupsOfSugarNeeded = 0,
  cupsAdded = 0;
do {
  cupsAdded++, console.log(cupsAdded + " cups was added!");
} while (cupsAdded < cupsOfSugarNeeded);
const rapperArray = ["Lil' Kim", "Jay-Z", "Notorious B.I.G.", "Tupac"];
for (
  let o = 0;
  o < rapperArray.length &&
  (console.log(rapperArray[o]), "Notorious B.I.G." !== rapperArray[o]);
  o++
);
console.log("And if you don't know, now you know."),
  console.log("My name is ${name} and I am ${age}");
const eg = "Hello World";
console.log(eg.length),
  console.log(eg.toUpperCase),
  console.log(eg.toLowerCase),
  console.log(eg.substring(0, 5)),
  console.log(eg.substring(0, 5).toUpperCase());
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 30,
  hobbies: ["music", "movies", "sports"],
  address: { street: "50 main st", city: "Boston", state: "MA" },
};
console.log(person.hobbies);
const {
  firstName: firstName,
  lastName: lastName,
  address: { city: city },
} = person;
console.log(city), (person.email = "john@gmail.com"), console.log(person);
const todos = [
  { id: 1, text: "Take out trash", isCompleted: !0 },
  { id: 2, text: "Meeting with boss", isCompleted: !0 },
  { id: 3, text: "Dentist appt", isCompleted: !1 },
];
console.log(todos),
  console.log(todos[1].text),
  (window.__remixManifest = {
    version: "d36b817a",
    entry: {
      module: "/build/entry.client-EUITTQHJ.js",
      imports: [
        "/build/_shared/chunk-ZDRGQH5V.js",
        "/build/_shared/chunk-VK3NTCPL.js",
        "/build/_shared/chunk-ZPHV5ZYN.js",
        "/build/_shared/chunk-EQWCKCTW.js",
        "/build/_shared/chunk-X3FSQJCZ.js",
        "/build/_shared/chunk-WJC7M44Z.js",
        "/build/_shared/chunk-6VRK4GPR.js",
      ],
    },
    routes: {
      root: {
        id: "root",
        path: "",
        module: "/build/root-RRU5ZYWW.js",
        imports: [
          "/build/_shared/chunk-3AOXMHAT.js",
          "/build/_shared/chunk-LIM32NTY.js",
          "/build/_shared/chunk-ENZWTUWY.js",
          "/build/_shared/chunk-VBYTPGLN.js",
          "/build/_shared/chunk-X6PRMLGM.js",
          "/build/_shared/chunk-R3N3MVI7.js",
        ],
        hasAction: !1,
        hasLoader: !0,
        hasCatchBoundary: !0,
        hasErrorBoundary: !1,
      },
    },
    theme_color: "#ffffff",
    background_color: "#ffffff",
    display: "standalone",
  });
